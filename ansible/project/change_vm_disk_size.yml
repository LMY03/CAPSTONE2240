---
- name: Resize disk and filesystem dynamically
  hosts: your_host_group
  become: yes
  tasks:
    - name: Ensure parted is installed
      apt:
        name: parted
        state: present

    - name: Check current partition layout
      command: lsblk -no NAME,MOUNTPOINT | grep -E "\s/$"
      register: root_partition_output

    - name: Set root partition fact
      set_fact:
        root_partition: "/dev/{{ root_partition_output.stdout.split()[0] }}"

    - name: Print root partition
      debug:
        msg: "Root partition is {{ root_partition }}"

    - name: Backup partition table
      command: sfdisk --dump {{ root_partition | regex_replace('/[^/]+$', '') }} > /root/partition_table.bak
      when: not ansible_check_mode

    - name: Repartition the disk
      parted:
        device: "{{ root_partition | regex_replace('/[^/]+$', '') }}"
        number: "{{ root_partition | regex_replace('^.*([0-9]+)$', '\\1') }}"
        state: present
        part_type: primary
        fs_type: ext4
        resize: yes
        start: "{{ root_partition | regex_replace('^.*([0-9]+)$', '\\1') }}s"
        end: 100%
      when: not ansible_check_mode

    - name: Resize the filesystem
      filesystem:
        fstype: ext4
        dev: "{{ root_partition }}"
        resizefs: yes
      when: not ansible_check_mode

    - name: Verify the filesystem size
      command: df -h "{{ root_partition }}"
      register: df_output

    - name: Print df output
      debug:
        msg: "{{ df_output.stdout }}"
